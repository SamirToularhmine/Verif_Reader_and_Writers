Reader = [lecture] {
    etat = 6;
    init = 0;

    2 = lecture;

    0 -> 1 [countv0VerouillerW];
    0 -> 2 [countp1];
    1 -> 2 [countp1v1];
    2 -> 2 [lecture];
    2 -> 3 [verouillerMutex];
    3 -> 4 [countm1LibererW];
    3 -> 4 [countm1];
    4 -> 5 [libererMutex];
};;

/* Compteur pour 2 readers*/
RCounter = [zero, un] {
    etat = 3;
    init = 0;
    
    0 = zero;
    1 = un;

    0 -> 0 [v0];
    0 -> 1 [plus1v1];
    1 -> 2 [plus1];
    2 -> 1 [moins1];
    1 -> 0 [moins1v0];
};;

Writer = [ecriture] {
    etat = 3;
    init = 0;

    1 = ecriture;

    0 -> 1 [verouiller];
    1 -> 1 [ecriture];
    1 -> 2 [liberer];
};;


Semaphore = [free, used] {
    etat = 2;
    init = 1;

    1 = free;
    0 = used;

    1 -> 0 [p];
    0 -> 1 [v];
};;

ProduitSync = <Reader r1, Reader r2, Writer writer, Semaphore mutex, Semaphore w, RCounter counter> {
    <countv0VerouillerW, _, _, _, p, v0> -> r1_verouillerW;
    <countp1v1, _, _, _, _, plus1v1> -> r1_countp1v1;
    <countp1, _, _, _, _, plus1> -> r1_countp1;
    <lecture, _, _, _, _, _> -> r1_lecture;
    <verouillerMutex, _, _, p, _, _> -> r1_verouillerMutex;
    <countm1LibererW, _, _, _, v, moins1v0> -> r1_countm1libererW;
    <countm1, _, _, _, _, moins1> -> r1_countm1;
    <libererMutex, _, _, v, _, _> -> r1_libererMutex;

    <_,countv0VerouillerW, _, _, p, v0> -> r2_verouillerW;
    <_,countp1v1, _, _, _, plus1v1> -> r2_countp1v1;
    <_,countp1, _, _, _, plus1> -> r2_countp1;
    <_,lecture, _, _, _, _> -> r2_lecture;
    <_,verouillerMutex, _, p, _, _> -> r2_verouillerMutex;
    <_,countm1LibererW, _, _, v, moins1v0> -> r2_countm1libererW;
    <_,countm1,  _, _, _, moins1> -> r2_countm1;
    <_,libererMutex,  _, v, _, _> -> r2_libererMutex;

    <_,_, verouiller, _, p, _> -> w1_verouiller;
    <_,_, ecriture, _, _, _> -> w1_ecriture;
    <_,_, liberer, _, v, _> -> w1_liberer;
};;

bug = ProduitSync -> writer.ecriture &&  (r1.lecture || r2.lecture);; 
doubleLecture = ProduitSync -> r1.lecture && r2.lecture;; 
ecritureseul = ProduitSync -> writer.ecriture;;

todot Algo1_v2/algo1_v2.dot bug;;